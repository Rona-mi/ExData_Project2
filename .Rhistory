q()
play()
swirl()
library(swirl)
install_from_swirl("R Programming")
swirl()
TRUE==TRUE
TRUE==FALSE
FALSE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!TRUE=7
5!TRUE7
!TRUE
!5==7
FALSE&FALSE
TRUE&c(TRUE, FALSE, FALSE)
TRUE&&c(TRUE, FALSE, FALSE)
TRUE|c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 ==
| 6, !FALSE)
xor(5 ==
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
source("C:\\Users\\ronami\\Documents\\DataScienceCourse\\Course 2 R Programming\\boring function.R")
submit()
bye()
q()
getwd()
library(swirl)
install_from_swirl("R Programming")
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips<-sample(0:1,100,prob = c(0.3, 0.7))
flips<-sample(c(0,1), 100, prob = c(0.3, 0.7))
flips<-sample(c(0,1), 100, replace=TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(100,1, prob=0.7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5,10)
my_pois<-replicate(100, rpois(5, 10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
?plot
plot(x = cars$speed, y = cars$dist, xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab = "Stoppin Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab = "Stopping Distance")
?plot
plot(x = cars$speed, y = cars$dist, main="My Plot")
plot(cars, main="My Plot")
?plot
plot(cars, sub()="My Plot Subtitle")
plot(cars, sub="My Plot Subtitle")
plot(cars, col = 2)
?plot
plot(cars, xlim=c(10,15))
?points
plot(cars, pch=2)
data(mtcars)
play()
summary(mtcars)
dim(mtcars)
head(mtcars)
nxt()
?boxplot()
?boxplot
boxplot(mtcars, mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(xlsx)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
agricultureLogical <- dt$ACR == 3 & dt$AGS == 6
which(agricultureLogical)[1:3]
packages <- c("data.table", "jpeg")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
library(jpeg)
install.packages(jpeg)
installed.packages("jpeg")
swirl()
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main main = "Number of Counties in Each
| Region")
barplot(reg, col = "wheat", main main = "Number of Counties in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col = "green")
d
plot(pollution$pm25, pollution$latitude)
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, call(eruptions, waiting))
with(faithful, call("eruptions", "waiting"))
with(faithful, call("eruptions", waiting))
with(faithful, plot("eruptions", waiting))
with(faithful, plot("eruptions", "waiting""))
with(faithful, plot("eruptions", "waiting"))
with(faithful, plot("eruptions", "waiting"))
with(faithful, plot(eruptions, waiting))
library(swirl)
swirl()
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title("Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title("Ozone and Wind in New York City")
length(par())
with(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, type="n",airquality$Ozone)
title("Wind and Ozone in NYC")
xlab(c("May", "June", "July", "August", "September"))
?title()
title(main = "Wind and Ozone in NYC", xlab = c("May", "June", "July", "August", "September"))
may <- subset(airquality, Month==5)
par()$pch
?par()$pch
?par()
?points
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, !Month==5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend = c("May","Other Months"))
line(y = median(airquality$Wind), lty=2, lwd=2)
line(median(airquality$Wind), lty=2, lwd=2)
line(y = median(airquality$Wind))
line(median(airquality$Wind))
line(airquality$Wind, lty=2, lwd=2)
line(airquality$Wind)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar, main="Ozone and Solar")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month) , data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[[x.limits]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
myedit("plot1.R")
myedit("plot1.R")
l;l
myedit("plot1.R)
myedit("plot1.R")
buy()
bye()
getwd()
setwd("C:\\Users\\ronami\\Documents\\DataScienceCourse\\04_Exploratory_Data_Analysis\\PrAss_2")
getwd()
setwd("/ExData_Project2")
setwd(".../ExData_Project2")
setwd("C:\\Users\\ronami\\Documents\\DataScienceCourse\\04_Exploratory_Data_Analysis\\PrAss_2\\ExData_Project2")
file.url<-'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
download.file(file.url,destfile='data/NEI_data.zip')
download.file(file.url,destfile='NEI_data.zip')
unzip("NEI_data.zip")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## aggregating data by year
totalPM25<-tapply(NEI$Emissions, NEI$year, sum)
##plotting
plot(names(totalPM25), totalPM25, type = 'l', col = 'red', xlab = "year", main = "Total US PM2.5 by year")
source("Plot1.R")
source("Plot1.R")
source("Plot1.R")
getwd()
setwd("C:/Users/ronami/Documents/DataScienceCourse/04_Exploratory Data Analysis/PrAss_2/ExData_Project2")
setwd("C:/Users/ronami/Documents/DataScienceCourse/04_Exploratory Data Analysis/PrAss_2")
getwd()
source("Plot1.R")
source("Plot1.R")
source("Plot1.R")
source("Plot1.R")
source("Plot1.R")
setwd("C:/Users/ronami/Documents/DataScienceCourse/04_Exploratory Data Analysis/PrAss_2")
getwd()
setwd("C:/Users/ronami/Documents/DataScienceCourse/04_Exploratory_Data_Analysis/PrAss_2")
source("Plot1.R")
setwd("C:/Users/ronami/Documents/DataScienceCourse/04_Exploratory Data Analysis/PrAss_2/ExData_Project2")
setwd("C:/Users/ronami/Documents/DataScienceCourse/04_Exploratory_Data_Analysis/PrAss_2/ExData_Project2")
source("Plot1.R")
source("Plot1.R")
unzip("data/NEI_data.zip")
unzip("data/NEI_data.zip")
source("Plot1.R")
NEI <- readRDS("summarySCC_PM25.rds")
source("Plot1.R")
source("Plot2.R")
source("Plot3.R")
source("Plot2.R")
source("Plot3.R")
source("Plot2.R")
source("Plot3.R")
source("Plot4.R")
##Subsetting coal combustion SCC codes
coalcomb.codes<-subset(SCC, grepl("Comb", Short.Name) & grepl("Coal", Short.Name))
## Subsetting NEI data by coal combustion codes and aggregating data by year
coalcomb<-subset(NEI, SCC %in% coalcomb.codes$SCC)
coalcombPM25byYearType<-aggregate(Emissions ~ year + type, coalcomb, sum)
##plotting
qplot(year, Emissions, data=coalcombPM25byYearType, color=type, geom="line") + ggtitle('Coal combustion emissions from 1998 to 2008')
source("Plot4.R")
source("Plot5.R")
source("Plot6.R")
#open device
png(filename='plot6.png',width=480,height=480,units='px')
##Subsetting  motor vehicles sources
vehicles.codes<-subset(SCC, grepl("Vehicle", Short.Name) | grepl("vehicle", Short.Name))
## Subsetting NEI data by motor vehicle and aggregating data by year. ONly for Baltimore and LA
vehiclesNEI<-subset(NEI, SCC %in% vehicles.codes$SCC)
vehiclesNEI<-vehiclesNEI[vehiclesNEI$fips == "24510" | vehiclesNEI$fips == "06037",]
vehiclesPM25byYear<-aggregate(Emissions ~ year * fips, vehiclesNEI, sum)
vehiclesPM25byYear$county<-ifelse(vehiclesPM25byYear$fips == "24510", "Baltimore", "Los Angeles")
##plotting
qplot(year, Emissions, data=vehiclesPM25byYear, geom="line", color=county) + ggtitle("Motor vehicle emissions from 1998 to 2008 compared in Baltimore and LA") + xlab("Year") + ylab(expression("Emissions"))
# close device
dev.off()
#open device
png(filename='plot4.png',width=480,height=480,units='px')
##Subsetting coal combustion SCC codes
coalcomb.codes<-subset(SCC, grepl("Comb", Short.Name) & grepl("Coal", Short.Name))
## Subsetting NEI data by coal combustion codes and aggregating data by year
coalcomb<-subset(NEI, SCC %in% coalcomb.codes$SCC)
coalcombPM25byYearType<-aggregate(Emissions ~ year + type, coalcomb, sum)
##plotting
qplot(year, Emissions, data=coalcombPM25byYearType, color=type, geom="line") + ggtitle('Coal combustion emissions from 1998 to 2008')
# close device
dev.off()
#open device
png(filename='plot5.png',width=480,height=480,units='px')
##Subsetting  motor vehicles sources
vehicles.codes<-subset(SCC, grepl("Vehicle", Short.Name) | grepl("vehicle", Short.Name))
## Subsetting NEI data by motor vehicle and aggregating data by year
vehiclesNEI<-subset(NEI, SCC %in% vehicles.codes$SCC)
vehiclesNEI<-vehiclesNEI[vehiclesNEI$fips == "24510",]
vehiclesPM25byYear<-aggregate(Emissions ~ year, vehiclesNEI, sum)
##plotting
qplot(year, Emissions, data=vehiclesPM25byYear, geom="line") + ggtitle('Motor vehicle emissions from 1998 to 2008 in Baltimore')
# close device
dev.off()
source("Plot1.R")
## aggregating data by year
totalPM25<-tapply(NEI$Emissions, NEI$year, sum)
# plot data
plot(names(totalPM25), totalPM25, type = 'l', col = 'red', xlab = "year", main = "Total US PM2.5 by year")
# Subset  motor vehicles sources
vehicles.codes<-subset(SCC, grepl("Vehicle", Short.Name) | grepl("vehicle", Short.Name))
# Subset NEI data by motor vehicle and aggregate data by year for Baltimore and LA
vehiclesNEI<-subset(NEI, SCC %in% vehicles.codes$SCC)
vehiclesNEI<-vehiclesNEI[vehiclesNEI$fips == "24510" | vehiclesNEI$fips == "06037",]
vehiclesPM25_Year<-aggregate(Emissions ~ year * fips, vehiclesNEI, sum)
vehiclesPM25_YearCounty<-ifelse(vehiclesPM25_Year$fips == "24510", "Baltimore", "Los Angeles")
##plotting
qplot(year, Emissions, data=vehiclesPM25_Year, geom="line", color=county) + ggtitle("Motor vehicle emissions from 1998 to 2008 compared in Baltimore and LA") + xlab("Year") + ylab(expression("Emissions"))
# Subset  motor vehicles sources
vehicles.codes<-subset(SCC, grepl("Vehicle", Short.Name) | grepl("vehicle", Short.Name))
# Subset NEI data by motor vehicle and aggregate data by year for Baltimore and LA
vehiclesNEI<-subset(NEI, SCC %in% vehicles.codes$SCC)
vehiclesNEI<-vehiclesNEI[vehiclesNEI$fips == "24510" | vehiclesNEI$fips == "06037",]
vehiclesPM25_Year<-aggregate(Emissions ~ year * fips, vehiclesNEI, sum)
vehiclesPM25_Year$county<-ifelse(vehiclesPM25_Year$fips == "24510", "Baltimore", "Los Angeles")
##plotting
qplot(year, Emissions, data=vehiclesPM25_Year, geom="line", color=county) + ggtitle("Motor vehicle emissions from 1998 to 2008 compared in Baltimore and LA") + xlab("Year") + ylab(expression("Emissions"))
